### LINUX/GIT BASH COMMONDS ###
"touch file.type" to create an empty file
"rm -rf file.type" to remove/delete permantaly a file
"mv file.type file_renamed.type" move commond can be used for renaming
"cd ../" change directory one level up
"cd ./path/" change directory to path from here
"cd /path/" change directory to given path


### GIT TUTORIAL NOTES ###

**GIT DIFFERENCE**

"git diff" show diffrence bw staging area and working area
"git diff --staged" show difference bw sateging area and last commit

**SKIPPING STAGING BEFORE COMMIT**
"git commit -a -m "commit message" "
this do a direct commit after adding tracked files to stage
but not stage the untracked files eg new files added  

**MOVING AND RENAMING FILES IN GIT**
 "git rm file" to remove and auto stage
"git mv second.txt second_renamed.txt" to rename a file and autostage
"git rm --cached file.type" to explicitaly untrack a tracking file after adding in gitignore

**GIT LOG**
"git log"
"git log -p" show log with diff 
"git log -p -3" above result with last 3 entries
"git log --stat" show detailed log with incremental differenciation
"git log --pretty=oneline" commit hash and commit messages in one line
"git log --since=2.days" log filter other filter are month,weeks,years

**UNSTAGING **
"git restore file.type" discard changes on present working directory
"git restore --staged file.type" to unstage a staged file
"git checkout -f" restore to last commit

**WORKING WITH REMOTE DIRECTORY**
Generate and add ssh key with github guides and add ssh key to github
"git push -u origin main" to upload/push your all code to github

**GIT ALIAS**
"git config --global alias.st status" set st as alias of status

**GIT BRANCHING**
"git checkout -b newbranch" to create a new branch and switch to it
"git checkout -f" restore to last commit
"git checkout commithash" to go to inteded commit
"git branch to check branches and active branch
"git branch -v" view last commit of each branches with hash and messages
"git branch --merged" show all branches that are merged
"git branch --no-merged" show not merged braches 
"git branch -d branchname" to delete a merged branch show error for unmerged branch
"git branch -D branchname" to force delete a branch anytype
"git push origin branch1" to push your branch to remote as same naming before push you must be on branch to be pushed
"git push origin branch1:newbranch" to push your branch to remote with changed name
"git push -d origin branch1" delete branch from remote